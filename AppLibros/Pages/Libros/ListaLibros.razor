@page "/libros"
@using AppLibros.Models
@using AppLibros.Repository
@inject IRepository Repository

<PageTitle>Crud Blazor</PageTitle>

<h1 class="text-center">Todos nuestros cursos!</h1>

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-12">
                <h2 class="text-dark">Lista de Libros</h2>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Id</th>
                <th>Titulo</th>
                <th>Descripcion</th>
                <th>Autor</th>
                <th>Paginas</th>
                <th>Precio</th>
                <th>Fecha de Creacion</th>
                <th>Acciones</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var libro in listaLibro)
            {
                <tr>
                    <td>@libro.Id</td>
                    <td>@libro.Titulo</td>
                    <td>@libro.Descripcion</td>
                    <td>@libro.Autor</td>
                    <td>@libro.Paginas</td>
                    <td>@libro.Precio</td>
                    <td>@libro.FechaCreacion</td>
                    <td>
                        <a href="editar-libro/@libro.Id" class="btn btn-success btn-sm"><span class="oi oi-plus" aria-hidden="true"></span> Editar</a>
                        <button @onclick="@(() => BorrarLibro(libro.Id))" class="btn btn-danger btn-sm"><span class="oi oi-delete" aria-hidden="true"></span> Eliminar</button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Libro> listaLibro = new List<Libro>();

    protected override async Task OnInitializedAsync()
    {
        listaLibro = await Repository.GetLibros();
    }
    
    // Borrar libro
    private async Task BorrarLibro(int libroId)
    {
        await Repository.EliminarLibro(libroId);
        
        // Actualizar el modelo de libros para que recargue la lista
        listaLibro = await Repository.GetLibros();
    }
}